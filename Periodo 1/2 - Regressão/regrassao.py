# -*- coding: utf-8 -*-
"""regrassao.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GsxtsB_Z11iAJ5lONVyI77mIKVqCJuzp

#Regressão para o vinho tinto
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv'
df = pd.read_csv(url, sep=';')
df.head()

df.describe()

df.isnull().sum()

sns.histplot(df['quality'], bins=10, kde=True)
plt.title('Distribuição da Qualidade dos Vinhos Tintos')
plt.xlabel('Qualidade')
plt.ylabel('Frequência')
plt.show()

X = df.drop('quality', axis=1)
y = df['quality']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print(f'RMSE: {rmse:.2f}')
print(f'R²: {r2:.2f}')

importancias = model.feature_importances_
features = X.columns

plt.figure(figsize=(10,6))
sns.barplot(x=importancias, y=features)
plt.title('Importância das Variáveis no Modelo')
plt.show()